name: CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  workflow_dispatch:

concurrency:
    group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
    cancel-in-progress: true

jobs:
    test:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: java-no-spring
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Java
              uses: actions/setup-java@v4
              with:
                distribution: 'corretto'
                java-version: '21'
                cache: 'maven'

            - name: Run tests
              run: mvn clean test

    integration-test:
        name: integration-test
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: java-no-spring
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Java
              uses: actions/setup-java@v4
              with:
                distribution: 'corretto'
                java-version: '21'
                cache: 'maven'

            - name: Start Java server
              run: |
                echo "Starting server..."
                mvn clean package
                nohup mvn exec:java -Dexec.mainClass="com.github.vrnvu.App" > server.log 2>&1 &
                server_pid=$!
                echo $server_pid > server.pid
                sleep 10
                if ! ps -p $server_pid > /dev/null; then
                    echo "Server failed to start! Logs:"
                    cat server.log
                    exit 1
                fi
                echo "Server process is running"
              env:
                PORT: 8080

            - name: Wait for server to start
              run: |
                echo "Checking server status..."
                ps aux | grep java
                echo "Server logs:"
                cat server.log
                timeout=60
                elapsed=0
                until curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/todos | grep -q "200"; do
                  if [ $elapsed -gt $timeout ]; then
                    echo "Timeout waiting for server to start"
                    cat server.log
                    exit 1
                  fi
                  echo "Waiting for server..."
                  if ! ps -p $(cat server.pid) > /dev/null; then
                    echo "Server process died! Logs:"
                    cat server.log
                    exit 1
                  fi
                  sleep 5
                  elapsed=$((elapsed+5))
                done

            - name: Run integration tests
              run: ../scripts/integration-test.sh
              env:
                ENV: dev

            - name: Stop Java server
              run: pkill java